{"version":3,"sources":["firebase.js","Admin.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","apps","length","app","initializeApp","Admin","props","writeUserData","Firebase","database","ref","set","state","developers","getUserData","on","snapshot","val","setState","handleSubmit","event","preventDefault","lat","parseFloat","refs","value","lng","name","email","title","role","subscribe","uid","devIndex","findIndex","data","Date","getTime","toString","push","modalOpen","removeData","developer","window","confirm","newState","filter","updateData","onCloseForm","stopPropagation","onNewForm","this","prevProps","prevState","className","onClick","map","key","href","style","textAlign","onSubmit","display","type","placeholder","React","Component","SignInScreen","isSignedIn","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","user","signOut","firebaseAuth"],"mappings":"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","file":"static/js/7.438faf59.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nconst FB_API_KEY = `${process.env.REACT_APP_FB_API_KEY}`;\n\nconst config = {\n  apiKey: FB_API_KEY,\n  authDomain: 'parallel-monument.firebaseapp.com',\n  databaseURL: 'https://parallel-monument.firebaseio.com',\n  projectId: 'parallel-monument',\n  storageBucket: 'parallel-monument.appspot.com',\n  messagingSenderId: '915319114232'\n};\n\nexport default (!firebase.apps.length\n  ? firebase.initializeApp(config)\n  : firebase.app());\n","import React from 'react';\nimport FirebaseAuth from 'react-firebaseui/FirebaseAuth';\nimport Firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport './firebase.js';\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      developers: [],\n      modalOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state.developers) {\n      this.writeUserData();\n    }\n  }\n\n  writeUserData = () => {\n    Firebase.database()\n      .ref('/developers')\n      .set(this.state.developers);\n    //console.log(\"DATA SAVED\");\n  };\n\n  getUserData = () => {\n    let ref = Firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state);\n      //console.log(state);\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let lat = parseFloat(this.refs.lat.value);\n    let lng = parseFloat(this.refs.lng.value);\n    let name = this.refs.name.value;\n    let email = this.refs.email.value;\n    let title = this.refs.title.value;\n    let role = this.refs.role.value;\n    let subscribe = this.refs.subscribe.value;\n    let uid = this.refs.uid.value;\n\n    if (uid && name && email && title && role && subscribe && lat && lng) {\n      const { developers } = this.state;\n      const devIndex = developers.findIndex(data => {\n        return data.uid === uid;\n      });\n      developers[devIndex].lat = lat;\n      developers[devIndex].lng = lng;\n      developers[devIndex].name = name;\n      developers[devIndex].email = email;\n      developers[devIndex].title = title;\n      developers[devIndex].role = role;\n      developers[devIndex].subscribe = subscribe;\n      this.setState({ developers });\n    } else if (lat && lng && name && email && title && role && subscribe) {\n      const uid = new Date().getTime().toString();\n      const { developers } = this.state;\n      developers.push({ lat, lng, uid, name, email, title, role, subscribe });\n      this.setState({ developers });\n    }\n\n    this.refs.lat.value = '';\n    this.refs.lng.value = '';\n    this.refs.name.value = '';\n    this.refs.email.value = '';\n    this.refs.title.value = '';\n    this.refs.role.value = '';\n    this.refs.subscribe.value = '';\n    this.refs.uid.value = '';\n    this.setState({\n      modalOpen: false\n    });\n  };\n\n  removeData = developer => {\n    window.confirm('Are you sure?');\n    const { developers } = this.state;\n    const newState = developers.filter(data => {\n      return data.uid !== developer.uid;\n    });\n    this.setState({ developers: newState });\n  };\n\n  updateData = developer => {\n    this.setState({\n      modalOpen: true\n    });\n    this.refs.uid.value = developer.uid;\n    this.refs.name.value = developer.name;\n    this.refs.email.value = developer.email;\n    this.refs.role.value = developer.role;\n    this.refs.subscribe.value = developer.subscribe;\n    this.refs.lat.value = developer.lat;\n    this.refs.lng.value = developer.lng;\n    this.refs.title.value = developer.title;\n  };\n  onCloseForm = event => {\n    event.stopPropagation();\n    this.setState({ modalOpen: false });\n  };\n  onNewForm = event => {\n    event.stopPropagation();\n    this.setState({ modalOpen: true });\n  };\n\n  render() {\n    const { developers, modalOpen } = this.state;\n    return (\n      <div className=\"admin\">\n        <div className=\"card-body\">\n          <p className=\"center\">\n            <button onClick={this.onNewForm} className=\"btn border\">\n              Create\n            </button>\n          </p>\n        </div>\n        <div className=\"row\">\n          {developers.map(developer => (\n            <div key={developer.uid} className=\"card-body\">\n              <p className=\"center\">\n                <span className=\"bborder\">{developer.lat}</span>\n                <span className=\"bborder\">{developer.lng}</span>\n              </p>\n              <p>{developer.name}</p>\n              <p>\n                <a href={`mailto:${developer.email}`}>{developer.email}</a>\n              </p>\n              <p>\n                Subscribe:\n                {developer.subscribe}\n              </p>\n              <p className=\"card-text\" style={{ textAlign: 'center' }}>\n                {developer.title}\n              </p>\n              <p className=\"card-text\">{developer.role}</p>\n              <p className=\"center\">\n                <button\n                  onClick={() => this.removeData(developer)}\n                  className=\"btn border\"\n                >\n                  Delete\n                </button>\n                <button\n                  onClick={() => this.updateData(developer)}\n                  className=\"btn border\"\n                >\n                  Edit\n                </button>\n              </p>\n            </div>\n          ))}\n        </div>\n        <div>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"form border\"\n            style={{ display: modalOpen ? 'flex' : 'none' }}\n          >\n            <div>\n              <button onClick={this.onCloseForm} className=\"close\">\n                ×\n              </button>\n            </div>\n            <div className=\"form-row\">\n              <div>\n                <label>Latitude</label>\n                <input type=\"text\" ref=\"lat\" placeholder=\"0\" />\n              </div>\n              <div>\n                <label>Longitude</label>\n                <input type=\"text\" ref=\"lng\" placeholder=\"0\" />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <input type=\"hidden\" ref=\"uid\" />\n              <div>\n                <label>Qui</label>\n                <input type=\"text\" ref=\"name\" placeholder=\"Votre nom\" />\n              </div>\n              <div>\n                <label>Email</label>\n                <input type=\"email\" ref=\"email\" placeholder=\"Votre email\" />\n              </div>\n              <div>\n                <label>Quand</label>\n                <input type=\"text\" ref=\"title\" placeholder=\"JJ/MM/AAAA\" />\n              </div>\n              <div>\n                <label>Quoi</label>\n                <textarea type=\"text\" ref=\"role\" placeholder=\"Votre texte\" />\n              </div>\n            </div>\n            <div>\n              <button type=\"submit\" className=\"close\">\n                Enregistrer\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class SignInScreen extends React.Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [Firebase.auth.EmailAuthProvider.PROVIDER_ID],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = Firebase.auth().onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user })\n    );\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div className=\"signin\">\n          <FirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={Firebase.auth()}\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h1>Parallel Monument</h1>\n        <div className=\"card-body\">\n          <p className=\"center\">\n            <button\n              className=\"btn border\"\n              onClick={() => Firebase.auth().signOut()}\n            >\n              Sign-out\n            </button>\n          </p>\n        </div>\n        <Admin />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}